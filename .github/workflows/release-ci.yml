name: 'Release-CI'
on:
    workflow_dispatch:
        inputs:
            version:
                description: 'version'
                required: true

permissions:
    contents: write

jobs:
    release:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [22.x]
        steps:
            - name: Ensure gh (GitHub CLI) is installed
              run: |
                  if ! command -v gh >/dev/null 2>&1; then
                    echo "gh not found - installing"
                    sudo apt-get update && sudo apt-get install -y gh
                  else
                    gh --version
                  fi
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install dependencies
              run: npm install
              working-directory: react
            - name: Update version
              run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
              working-directory: react
            - name: run all tests with coverage
              run: npm run test:CI
              working-directory: react
            - name: Build
              run: npm run build
              working-directory: react
            - name: Create release asset
              run: tar -cvzf bwmon.tar.gz react/build server
            - name: Setup git config
              run: |
                  git config user.name "${GITHUB_ACTOR}"
                  git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            - name: Commit release
              run: |
                  git status
                  git add -u
                  git commit -m "Version ${{ github.event.inputs.version }}" || echo "no changes to commit"
                  # push commit and any tags created alongside it; continue gracefully if push is blocked
                  git push origin main --follow-tags || echo "push failed or blocked (branch protection?)"
                  git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}" || echo "tag already exists"
                  git push origin v${{ github.event.inputs.version }} || echo "tag push failed or tag already exists"
            - name: Create or update release (idempotent)
              run: |
                  set -e
                  TAG="v${{ github.event.inputs.version }}"
                  ASSET="bwmon.tar.gz"
                  if gh release view "$TAG" >/dev/null 2>&1; then
                    echo "Release $TAG already exists; uploading asset (clobber if present)"
                    gh release upload "$TAG" "$ASSET" --clobber
                  else
                    echo "Creating release $TAG"
                    gh release create "$TAG" "$ASSET" --title "Release $TAG" --generate-notes
                  fi
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
