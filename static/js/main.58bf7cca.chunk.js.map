{"version":3,"sources":["theme.js","components/main/Header.js","components/main/Footer.js","components/navigation/UseNavigation.js","components/navigation/Navigation.js","components/messages/Message.js","components/messages/Error.js","components/navigation/PageNotFound.js","components/navigation/Routes.js","components/error/ErrorBoundary.js","components/table/Body.js","components/table/CellInfo.js","components/inputs/DropDown.js","components/table/Footer.js","components/table/Header.js","components/table/Pagination.js","components/inputs/Search.js","utils/ConversionUtils.js","utils/SortUtils.js","services/Data.js","services/Usage.js","services/API.js","hooks/common/UseYear.js","hooks/common/UseYearMonth.js","hooks/byuser/UseUsageByUser.js","hooks/common/UseSort.js","hooks/common/UsePagination.js","components/messages/Info.js","components/loading/Loading.js","pages/byuser/UsageByUser.js","hooks/byuser/UseUsageByUserGraph.js","pages/byuser/UsageByUserGraph.js","hooks/bymonth/UseUsageByMonth.js","pages/bymonth/UsageByMonth.js","hooks/bymonth/UseUsageByMonthGraph.js","pages/bymonth/UsageByMonthGraph.js","hooks/byyear/UseUsageByYear.js","pages/byyear/UsageByYear.js","hooks/byyear/UseUsageByYearGraph.js","pages/byyear/UsageByYearGraph.js","menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","overrides","MuiTableCell","sizeSmall","padding","MuiFormControl","root","margin","MuiGrid","item","alignSelf","useStyles","makeStyles","title","flexGrow","Header","classes","AppBar","position","Toolbar","variant","Typography","id","className","process","text","spacing","Footer","currentTime","useNavigation","menu","useState","index","setIndex","location","useLocation","useEffect","current","findIndex","routeInfo","pathname","Navigation","BottomNavigation","value","onChange","event","newRouteIndex","showLabels","map","route","BottomNavigationAction","key","label","icon","component","Link","to","width","marginTop","Message","severity","message","Alert","AlertTitle","Error","PageNotFound","Routes","exact","path","ErrorBoundary","state","error","errorInfo","renderError","toString","renderErrorInfo","componentStack","this","setState","props","children","Component","Body","prefix","cellInfos","values","TableBody","TableRow","style","background","cellInfo","TableCell","align","convert","CellInfo","sortable","footer","DropDown","items","Select","TableHead","visuallyHidden","border","clip","height","overflow","top","onRequestSort","ascending","orderBy","direction","sortDirection","TableSortLabel","active","onClick","property","flexShrink","Actions","count","page","rowsPerPage","onChangePage","useTheme","IconButton","disabled","aria-label","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","Pagination","options","rowsPerPageOptions","i","push","min","minimum","TablePagination","labelRowsPerPage","SelectProps","inputProps","native","labelId","ActionsComponent","Search","TextField","InputProps","startAdornment","InputAdornment","placeholder","timeToDate","time","DateTime","fromSeconds","Number","toFormat","toMonth","month","local","usageInGBytes","toFixed","toPercent","comparator","isAscending","a","b","descending","sort","Data","date","ip","mac","user","down","up","first","last","IP","MAC","download","upload","firstSeen","lastSeen","year","split","total","days","floor","abs","average","response","replace","line","elements","length","filter","usage","request","basepath","filename","fetch","ok","status","statusText","result","store","data","cached","diff","minutes","sum","entries","forEach","entry","getYears","Set","element","getMonths","getUsageByYear","daysInYear","getUsageByUser","daysInMonth","filterLowerCase","toLowerCase","indexOf","percent","API","fromFormat","getUsageByMonth","months","Promise","all","useYear","years","setYears","setYear","useYearMonth","setMonths","setMonth","useUsageByUser","setFilter","setData","loading","setLoading","usageByUser","useSort","ascendingDefault","orderByDefault","setAscending","setOrderBy","usePagination","rowsPerPageDefault","setPage","setRowsPerPage","Info","Loading","isLoading","LinearProgress","UsageByUser","handleChangePage","newPage","handleChangeRowsPerPage","target","handleChangeYear","handleChangeMonth","handleChangeFilter","handleRequestSort","Paper","TableContainer","Table","stickyHeader","size","colSpan","onChangeRowsPerPage","slice","useUsageByYearGraph","setOptions","series","setSeries","chart","toolbar","show","xaxis","categories","name","UsageByUserGraph","useUsageByUserGraph","Grid","container","sm","type","useUsageByMonth","usageByMonth","UsageByMonth","useUsageByMonthGraph","reverse","round","UsageByMonthGraph","FormControl","useUsageByYear","usageByYear","UsageByYear","UsageByYearGraph","MenuItem","Person","ShowChart","CalendarToday","Timeline","CalendarViewDay","App","createBrowserHistory","basename","ThemeProvider","CssBaseline","defaultProps","toLocaleString","DATETIME_FULL_WITH_SECONDS","Boolean","window","hostname","match","rootNode","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.58bf7cca.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiTableCell: {\r\n            sizeSmall: {\r\n                padding: '8px 0px 8px 16px',\r\n            },\r\n        },\r\n        MuiFormControl: {\r\n            root: {\r\n                margin: '8px 0px 8px 16px',\r\n            },\r\n        },\r\n        MuiGrid: {\r\n            item: {\r\n                alignSelf: 'center',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar variant=\"dense\">\r\n                <Typography id=\"app-title\" variant=\"h6\" className={classes.title}>\r\n                    {process.env.REACT_APP_DESCRIPTION}\r\n                </Typography>\r\n                <Typography id=\"app-version\" className={classes.text}>\r\n                    {process.env.REACT_APP_VERSION}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Footer = ({ currentTime }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"subtitle2\">All usage information is in gigabytes</Typography>\r\n            <Typography variant=\"subtitle2\">This page was generated on {currentTime}</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useNavigation = (menu) => {\r\n    const [index, setIndex] = useState(0);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const current = menu.findIndex((routeInfo) => routeInfo.pathname === location.pathname);\r\n        setIndex(current === -1 ? 0 : current);\r\n    }, [location, menu]);\r\n\r\n    return { index, setIndex };\r\n};\r\n\r\nexport default useNavigation;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\nimport useNavigation from './UseNavigation';\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst Navigation = ({ menu }) => {\r\n    const classes = useStyles();\r\n    const { index, setIndex } = useNavigation(menu);\r\n\r\n    const handleChange = (event, newRouteIndex) => setIndex(newRouteIndex);\r\n\r\n    return (\r\n        <BottomNavigation value={index} onChange={handleChange} showLabels className={classes.root}>\r\n            {menu.map((route, index) => (\r\n                <BottomNavigationAction\r\n                    id={route.id}\r\n                    key={route.pathname}\r\n                    value={index}\r\n                    label={route.label}\r\n                    icon={route.icon}\r\n                    component={Link}\r\n                    to={route.pathname}\r\n                />\r\n            ))}\r\n        </BottomNavigation>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst Message = ({ severity, message }) => {\r\n    const classes = useStyles();\r\n\r\n    return message ? (\r\n        <div className={classes.root}>\r\n            <Alert severity={severity}>\r\n                <AlertTitle>{message}</AlertTitle>\r\n            </Alert>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst Error = ({ message }) => {\r\n    return <Message severity=\"error\" message={message} />;\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport Error from '../messages/Error';\r\n\r\nconst PageNotFound = () => {\r\n    return <Error message=\"Page Not Found\" />;\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PageNotFound from './PageNotFound';\r\n\r\nconst Routes = ({ menu }) => (\r\n    <Switch>\r\n        <Route key=\"0-default\" exact path=\"/\" component={menu[0].component} />\r\n        {menu.map((route, index) => (\r\n            <Route key={route.pathname} path={route.pathname} component={route.component} />\r\n        ))}\r\n        <Route key=\"0-error\" component={PageNotFound} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Error from '../messages/Error';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state = { error: null, errorInfo: null };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo,\r\n        });\r\n    }\r\n\r\n    renderError = () => (this.state.error ? <Error message={this.state.error.toString()} /> : null);\r\n    renderErrorInfo = () => (this.state.errorInfo ? <div>{this.state.errorInfo.componentStack}</div> : null);\r\n\r\n    render() {\r\n        if (this.state.error || this.state.errorInfo) {\r\n            return (\r\n                <div>\r\n                    {this.renderError()}\r\n                    {this.renderErrorInfo()}\r\n                </div>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst Body = ({ prefix, cellInfos, values }) => (\r\n    <TableBody>\r\n        {values.map((value, index) => (\r\n            <TableRow\r\n                key={value.id}\r\n                id={prefix + '-data-' + index}\r\n                style={index % 2 ? { background: 'ghostwhite' } : { background: 'white' }}\r\n            >\r\n                {cellInfos.map((cellInfo) => {\r\n                    return (\r\n                        <TableCell key={cellInfo.id} align={cellInfo.align}>\r\n                            {cellInfo.convert ? cellInfo.convert(value[cellInfo.id]) : value[cellInfo.id]}\r\n                        </TableCell>\r\n                    );\r\n                })}\r\n            </TableRow>\r\n        ))}\r\n    </TableBody>\r\n);\r\n\r\nexport default Body;\r\n","export default class CellInfo {\r\n    constructor(id, sortable, align, label, footer, convert) {\r\n        this.id = id;\r\n        this.sortable = sortable;\r\n        this.align = align;\r\n        this.label = label;\r\n        this.footer = footer;\r\n        this.convert = convert;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Select, MenuItem } from '@material-ui/core';\r\n\r\nconst DropDown = ({ items, ...props }) => {\r\n    return items && props.value ? (\r\n        <Select {...props}>\r\n            {items.map((item, index) => (\r\n                <MenuItem key={index} value={item}>\r\n                    {item}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    ) : null;\r\n};\r\n\r\nexport default DropDown;\r\n","import React from 'react';\r\nimport { TableHead, TableRow, TableCell } from '@material-ui/core';\r\n\r\nconst Footer = ({ prefix, cellInfos, values }) => (\r\n    <TableHead>\r\n        <TableRow key=\"footer\" id={prefix + '-footer'}>\r\n            {cellInfos.map((cellInfo, index) => {\r\n                const text =\r\n                    index === 0\r\n                        ? 'Totals'\r\n                        : cellInfo.footer\r\n                        ? cellInfo.convert\r\n                            ? cellInfo.convert(values[cellInfo.id])\r\n                            : values[cellInfo.id]\r\n                        : '';\r\n                return (\r\n                    <TableCell key={cellInfo.id} align={cellInfo.align}>\r\n                        {text}\r\n                    </TableCell>\r\n                );\r\n            })}\r\n        </TableRow>\r\n    </TableHead>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nconst Header = ({ prefix, cellInfos, onRequestSort, ascending, orderBy }) => {\r\n    const classes = useStyles();\r\n    const sortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow key={'header'}>\r\n                {cellInfos.map((cellInfo) => {\r\n                    if (cellInfo.sortable) {\r\n                        const direction = ascending ? 'asc' : 'desc';\r\n                        return (\r\n                            <TableCell\r\n                                id={prefix + '-' + cellInfo.id}\r\n                                key={cellInfo.id}\r\n                                align={cellInfo.align}\r\n                                sortDirection={orderBy === cellInfo.id ? direction : false}\r\n                            >\r\n                                <TableSortLabel\r\n                                    active={orderBy === cellInfo.id}\r\n                                    direction={orderBy === cellInfo.id ? direction : 'asc'}\r\n                                    onClick={sortHandler(cellInfo.id)}\r\n                                >\r\n                                    {cellInfo.label}\r\n                                    {orderBy === cellInfo.id ? (\r\n                                        <span className={classes.visuallyHidden}>\r\n                                            {direction === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                        </span>\r\n                                    ) : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <TableCell key={cellInfo.id} align={cellInfo.align}>\r\n                                {cellInfo.label}\r\n                            </TableCell>\r\n                        );\r\n                    }\r\n                })}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { TablePagination, IconButton } from '@material-ui/core';\r\nimport { FirstPage, KeyboardArrowLeft, KeyboardArrowRight, LastPage } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n    },\r\n}));\r\n\r\nconst Actions = ({ count, page, rowsPerPage, onChangePage }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n                {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton onClick={handleLastPageButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"last page\">\r\n                {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst rowsPerPageOptions = (rowsPerPage, count) => {\r\n    let rowsPerPageOptions = [rowsPerPage];\r\n    if (count > rowsPerPage) {\r\n        for (let i = rowsPerPage * 2; i < count; i = i * 2) {\r\n            rowsPerPageOptions.push(i);\r\n        }\r\n        rowsPerPageOptions.push(count);\r\n    }\r\n    return rowsPerPageOptions;\r\n};\r\n\r\nconst Pagination = (props) => {\r\n    const options = rowsPerPageOptions(Math.min(props.minimum, props.count), props.count);\r\n    const selectProps = {\r\n        inputProps: { 'aria-label': 'rows per page' },\r\n        native: true,\r\n        id: 'select-rows-per-page-id',\r\n        labelId: 'select-label-rows-per-page-id',\r\n    };\r\n\r\n    return (\r\n        <TablePagination {...props} labelRowsPerPage=\"\" SelectProps={selectProps} rowsPerPageOptions={options} ActionsComponent={Actions} />\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst Search = ({ ...props }) => (\r\n    <TextField\r\n        {...props}\r\n        InputProps={{\r\n            startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                </InputAdornment>\r\n            ),\r\n        }}\r\n        placeholder=\"IP, MAC or USER\"\r\n    />\r\n);\r\n\r\nexport default Search;\r\n","import { DateTime } from 'luxon';\r\n\r\nexport const timeToDate = (time) => DateTime.fromSeconds(Number(time)).toFormat('MMM dd, yyyy HH:mm');\r\nexport const toMonth = (month) => DateTime.local(2012, month).toFormat('MMMM');\r\nexport const usageInGBytes = (value) => (Number(value) / 1000000).toFixed(3);\r\nexport const toPercent = (value) => Number(value).toFixed(1) + '%';\r\n","export const comparator = (isAscending, orderBy) => {\r\n    const ascending = (a, b, orderBy) => (a[orderBy] < b[orderBy] ? -1 : a[orderBy] > b[orderBy] ? 1 : 0);\r\n    const descending = (a, b, orderBy) => (a[orderBy] > b[orderBy] ? -1 : a[orderBy] < b[orderBy] ? 1 : 0);\r\n    return isAscending ? (a, b) => ascending(a, b, orderBy) : (a, b) => descending(a, b, orderBy);\r\n};\r\n\r\nexport const sort = (values, comparator) => [...values].sort(comparator);\r\n","export default class Data {\r\n    constructor(id, date, ip, mac, user, down, up, first, last) {\r\n        this.id = id;\r\n        this.IP = ip;\r\n        this.MAC = mac;\r\n        this.user = user;\r\n        this.download = Number(down);\r\n        this.upload = Number(up);\r\n        this.firstSeen = Number(first);\r\n        this.lastSeen = Number(last);\r\n        this.year = +date.split('-')[0];\r\n        this.month = +date.split('-')[1];\r\n        this.total = this.download + this.upload;\r\n        this.days = Math.floor(Math.abs(this.lastSeen - this.firstSeen) / (60 * 60 * 24) + 1);\r\n        this.average = +(this.total / this.days).toFixed(3);\r\n    }\r\n}\r\n","import Data from './Data';\r\n\r\nconst process = (response) =>\r\n    response\r\n        .replace(/[\\r]/g, '')\r\n        .split('\\n')\r\n        .map((line, index) => {\r\n            const elements = line.replace(/[\\n]/g, '').split(',');\r\n            return elements.length < 8\r\n                ? null\r\n                : new Data(index, elements[0], elements[1], elements[2], elements[3], elements[4], elements[5], elements[6], elements[7]);\r\n        })\r\n        .filter((line) => line !== null);\r\n\r\nclass Usage {\r\n    request = async (basepath) => {\r\n        const filename = basepath + '/usage.db';\r\n        const response = await fetch(filename);\r\n        if (!response.ok) {\r\n            throw new Error(response.status + ' ' + response.statusText);\r\n        }\r\n        const result = await response.text();\r\n        return process(result);\r\n    };\r\n}\r\n\r\nconst usage = new Usage();\r\nexport default usage;\r\n","import usage from './Usage';\r\nimport { DateTime } from 'luxon';\r\n\r\n// reload every 10 minutes\r\nconst RELOAD_TIME = 10;\r\n\r\nclass Store {\r\n    constructor() {\r\n        this.last = DateTime.local();\r\n    }\r\n\r\n    orderBy = (a, b) => {\r\n        let result = b.year - a.year;\r\n        if (result === 0) {\r\n            result = b.month - a.month;\r\n            if (result === 0) {\r\n                result = a.IP < b.IP ? -1 : a.IP > b.IP ? 1 : 0;\r\n                if (result === 0) {\r\n                    result = b.id - a.id;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    data = async () => {\r\n        const current = DateTime.local();\r\n        if (!this.cached || current.diff(this.last, ['minutes']).minutes >= RELOAD_TIME) {\r\n            const data = await usage.request(process.env.PUBLIC_URL);\r\n            this.cached = data.sort(this.orderBy);\r\n            this.last = current;\r\n        }\r\n        return this.cached;\r\n    };\r\n\r\n    sum = (entries, days, id) => {\r\n        let download = 0,\r\n            upload = 0,\r\n            total = 0;\r\n\r\n        entries.forEach((entry) => {\r\n            download += entry.download;\r\n            upload += entry.upload;\r\n            total += entry.total;\r\n        });\r\n        return {\r\n            id: id,\r\n            download: download,\r\n            upload: upload,\r\n            total: total,\r\n            average: +(total / days).toFixed(3),\r\n            days: days,\r\n        };\r\n    };\r\n\r\n    getYears = async () => {\r\n        const result = await this.data();\r\n        return [...new Set(result.map((element) => element.year))];\r\n    };\r\n\r\n    getMonths = async (year) => {\r\n        const result = await this.data();\r\n        return [...new Set(result.filter((element) => element.year === year).map((element) => element.month))];\r\n    };\r\n\r\n    getUsageByYear = async (year) => {\r\n        const result = await this.data();\r\n        const days = DateTime.local(year, 12, 31).daysInYear;\r\n        const usage = result.filter((element) => element.year === year);\r\n        return this.sum(usage, days, year);\r\n    };\r\n\r\n    getUsageByUser = async (year, month, filter) => {\r\n        const result = await this.data();\r\n        const days = DateTime.local(year, month).daysInMonth;\r\n        let usage = result.filter((element) => element.year === year && element.month === month);\r\n        if (filter) {\r\n            usage = usage.filter((entry) => {\r\n                let filterLowerCase = filter.toLowerCase();\r\n                return (\r\n                    entry.IP.toLowerCase().indexOf(filterLowerCase) !== -1 ||\r\n                    entry.MAC.toLowerCase().indexOf(filterLowerCase) !== -1 ||\r\n                    entry.user.toLowerCase().indexOf(filterLowerCase) !== -1\r\n                );\r\n            });\r\n        }\r\n        const total = this.sum(usage, days, month);\r\n        usage.forEach((value) => (value.percent = +((value.total * 100) / total.total).toFixed(1)));\r\n        return {\r\n            usage: usage,\r\n            total: total,\r\n        };\r\n    };\r\n}\r\n\r\nconst store = new Store();\r\n\r\nclass Service {\r\n    getYears = async () => await store.getYears();\r\n\r\n    getMonths = async (year) => {\r\n        const result = await store.getMonths(year);\r\n        return result.map((month) => DateTime.local(year, month).toFormat('MMMM'));\r\n    };\r\n\r\n    getUsageByUser = async (year, month, filter) =>\r\n        await store.getUsageByUser(year, DateTime.fromFormat(year + '-' + month, 'yyyy-MMMM').month, filter);\r\n\r\n    getUsageByMonth = async (year) => {\r\n        const months = await store.getMonths(year);\r\n        const total = await store.getUsageByYear(year);\r\n        let usage = await Promise.all(\r\n            months.map(async (entry) => {\r\n                const result = await store.getUsageByUser(year, entry);\r\n                return result.total;\r\n            })\r\n        );\r\n        usage.forEach((value) => (value.percent = +((value.total * 100) / total.total).toFixed(1)));\r\n        return {\r\n            usage: usage,\r\n            total: total,\r\n        };\r\n    };\r\n\r\n    getUsageByYear = async () => {\r\n        const result = await store.getYears();\r\n        return await Promise.all(\r\n            result.map(async (entry) => {\r\n                const result = await store.getUsageByYear(entry);\r\n                return result;\r\n            })\r\n        );\r\n    };\r\n}\r\n\r\nconst API = new Service();\r\nexport default API;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/API';\r\n\r\nconst useYear = () => {\r\n    const [years, setYears] = useState();\r\n    const [year, setYear] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            const years = await API.getYears();\r\n            setYears(years);\r\n            setYear(years[0]);\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    return { years, year, setYear };\r\n};\r\n\r\nexport default useYear;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/API';\r\nimport useYear from './UseYear';\r\n\r\nconst useYearMonth = () => {\r\n    const { years, year, setYear } = useYear();\r\n    const [months, setMonths] = useState();\r\n    const [month, setMonth] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            const months = await API.getMonths(year);\r\n            setMonths(months);\r\n            setMonth(months[0]);\r\n        }\r\n        if (year) {\r\n            fetch();\r\n        }\r\n    }, [year]);\r\n\r\n    return { years, year, setYear, months, month, setMonth };\r\n};\r\n\r\nexport default useYearMonth;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/API';\r\nimport useYearMonth from '../common/UseYearMonth';\r\n\r\nconst useUsageByUser = () => {\r\n    const { years, year, setYear, months, month, setMonth } = useYearMonth();\r\n    const [filter, setFilter] = useState('');\r\n    const [data, setData] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            const usageByUser = await API.getUsageByUser(year, month, filter);\r\n            setData(usageByUser);\r\n            setLoading(false);\r\n        }\r\n        if (year && month) {\r\n            fetch();\r\n        }\r\n    }, [year, month, filter]);\r\n\r\n    return { years, year, setYear, months, month, setMonth, filter, setFilter, data, loading };\r\n};\r\n\r\nexport default useUsageByUser;\r\n","import { useState } from 'react';\r\n\r\nconst useSort = (ascendingDefault, orderByDefault) => {\r\n    const [ascending, setAscending] = useState(ascendingDefault);\r\n    const [orderBy, setOrderBy] = useState(orderByDefault);\r\n\r\n    return { ascending, setAscending, orderBy, setOrderBy };\r\n};\r\n\r\nexport default useSort;\r\n","import { useState } from 'react';\r\n\r\nconst usePagination = (rowsPerPageDefault) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPerPageDefault);\r\n\r\n    return { page, setPage, rowsPerPage, setRowsPerPage };\r\n};\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst Info = ({ message }) => {\r\n    return <Message severity=\"info\" message={message} />;\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Info from '../messages/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst Loading = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return isLoading ? (\r\n        <div className={classes.root}>\r\n            <LinearProgress />\r\n            <Info message=\"Loading...\" />\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect } from 'react';\r\nimport { Paper, Table, TableRow, TableHead, TableCell, TableContainer } from '@material-ui/core';\r\nimport Body from '../../components/table/Body';\r\nimport CellInfo from '../../components/table/CellInfo';\r\nimport DropDown from '../../components/inputs/DropDown';\r\nimport Footer from '../../components/table/Footer';\r\nimport Header from '../../components/table/Header';\r\nimport Pagination from '../../components/table/Pagination';\r\nimport Search from '../../components/inputs/Search';\r\nimport { timeToDate, toPercent, usageInGBytes } from '../../utils/ConversionUtils';\r\nimport { comparator, sort } from '../../utils/SortUtils';\r\nimport useUsageByUser from '../../hooks/byuser/UseUsageByUser';\r\nimport useSort from '../../hooks/common/UseSort';\r\nimport usePagination from '../../hooks/common/UsePagination';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst cellInfos = [\r\n    new CellInfo('IP', true, 'left', 'IP', false),\r\n    new CellInfo('MAC', true, 'left', 'MAC', false),\r\n    new CellInfo('user', true, 'left', 'User', false),\r\n    new CellInfo('download', false, 'right', 'Down', true, usageInGBytes),\r\n    new CellInfo('upload', false, 'right', 'Up', true, usageInGBytes),\r\n    new CellInfo('total', true, 'right', 'Total', true, usageInGBytes),\r\n    new CellInfo('percent', false, 'right', 'Percent', false, toPercent),\r\n    new CellInfo('average', false, 'right', 'Average', true, usageInGBytes),\r\n    new CellInfo('days', false, 'left', 'Days', true),\r\n    new CellInfo('firstSeen', false, 'left', 'First Seen', false, timeToDate),\r\n    new CellInfo('lastSeen', false, 'left', 'Last Seen', false, timeToDate),\r\n];\r\n\r\nconst rowsPerPageMin = 12;\r\n\r\nconst UsageByUser = () => {\r\n    const { years, year, setYear, months, month, setMonth, filter, setFilter, data, loading } = useUsageByUser();\r\n    const { page, setPage, rowsPerPage, setRowsPerPage } = usePagination(rowsPerPageMin);\r\n    const { ascending, setAscending, orderBy, setOrderBy } = useSort(true, cellInfos[0].id);\r\n\r\n    const handleChangePage = (event, newPage) => setPage(newPage);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(Number(event.target.value));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeYear = (event) => setYear(event.target.value);\r\n\r\n    const handleChangeMonth = (event) => setMonth(event.target.value);\r\n\r\n    const handleChangeFilter = (event) => setFilter(event.target.value);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        setAscending(orderBy === property ? !ascending : false);\r\n        setOrderBy(property);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage(0);\r\n    }, [year, month, filter, setPage]);\r\n\r\n    const displayData = () =>\r\n        data ? (\r\n            <Table stickyHeader size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <DropDown id=\"user-year\" onChange={handleChangeYear} items={years} value={year} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <DropDown id=\"user-month\" onChange={handleChangeMonth} items={months} value={month} />\r\n                        </TableCell>\r\n                        <TableCell colSpan={2}>\r\n                            <Search id=\"user-filter\" onChange={handleChangeFilter} />\r\n                        </TableCell>\r\n                        <Pagination\r\n                            colSpan={cellInfos.length - 4}\r\n                            count={data.usage.length}\r\n                            minimum={rowsPerPageMin}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n                    </TableRow>\r\n                </TableHead>\r\n                <Header prefix=\"user\" cellInfos={cellInfos} onRequestSort={handleRequestSort} ascending={ascending} orderBy={orderBy} />\r\n                <Body\r\n                    prefix=\"user\"\r\n                    cellInfos={cellInfos}\r\n                    values={sort(data.usage, comparator(ascending, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)}\r\n                />\r\n                <Footer prefix=\"user\" cellInfos={cellInfos} values={data.total} />\r\n            </Table>\r\n        ) : null;\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            <TableContainer>{displayData()}</TableContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByUser;\r\n","import { useState, useEffect } from 'react';\r\nimport { usageInGBytes } from '../../utils/ConversionUtils';\r\nimport useUsageByUser from './UseUsageByUser';\r\n\r\nconst useUsageByYearGraph = () => {\r\n    const { years, year, setYear, months, month, setMonth, filter, setFilter, data, loading } = useUsageByUser();\r\n    const [options, setOptions] = useState({});\r\n    const [series, setSeries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setOptions({\r\n                chart: {\r\n                    id: 'usage-by-user',\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: data.usage.map((element) => element.IP),\r\n                },\r\n            });\r\n\r\n            setSeries([\r\n                {\r\n                    name: 'Total Usage',\r\n                    data: data.usage.map((element) => Number(usageInGBytes(element.total)).toFixed(1)),\r\n                },\r\n            ]);\r\n        }\r\n    }, [data]);\r\n\r\n    return { options, series, years, year, setYear, months, month, setMonth, filter, setFilter, loading };\r\n};\r\n\r\nexport default useUsageByYearGraph;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport Chart from 'react-apexcharts';\r\nimport DropDown from '../../components/inputs/DropDown';\r\nimport Search from '../../components/inputs/Search';\r\nimport useUsageByUserGraph from '../../hooks/byuser/UseUsageByUserGraph';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst UsageByUserGraph = () => {\r\n    const classes = useStyles();\r\n\r\n    const { options, series, years, year, setYear, months, month, setMonth, setFilter, loading } = useUsageByUserGraph();\r\n\r\n    const handleChangeYear = (event) => setYear(event.target.value);\r\n\r\n    const handleChangeMonth = (event) => setMonth(event.target.value);\r\n\r\n    const handleChangeFilter = (event) => setFilter(event.target.value);\r\n\r\n    const filters = () => (\r\n        <div className={classes.root}>\r\n            <Grid container>\r\n                <Grid item sm={2}>\r\n                    <DropDown id=\"user-year\" onChange={handleChangeYear} items={years} value={year} />\r\n                </Grid>\r\n                <Grid item sm={2}>\r\n                    <DropDown id=\"user-month\" onChange={handleChangeMonth} items={months} value={month} />\r\n                </Grid>\r\n                <Grid item sm={4}>\r\n                    <Search id=\"user-filter\" onChange={handleChangeFilter} />\r\n                </Grid>\r\n                <Grid item sm={4}></Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            {filters()}\r\n            <Chart options={options} series={series} type=\"bar\" height={500} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByUserGraph;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/API';\r\nimport useYear from '../common/UseYear';\r\n\r\nconst useUsageByMonth = () => {\r\n    const { years, year, setYear } = useYear();\r\n    const [data, setData] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            const usageByMonth = await API.getUsageByMonth(year);\r\n            setData(usageByMonth);\r\n            setLoading(false);\r\n        }\r\n        if (year) {\r\n            fetch();\r\n        }\r\n    }, [year]);\r\n\r\n    return { years, year, setYear, data, loading };\r\n};\r\n\r\nexport default useUsageByMonth;\r\n","import React from 'react';\r\nimport { Paper, Table, TableRow, TableHead, TableCell, TableContainer } from '@material-ui/core';\r\nimport Body from '../../components/table/Body';\r\nimport CellInfo from '../../components/table/CellInfo';\r\nimport DropDown from '../../components/inputs/DropDown';\r\nimport Footer from '../../components/table/Footer';\r\nimport Header from '../../components/table/Header';\r\nimport { toMonth, toPercent, usageInGBytes } from '../../utils/ConversionUtils';\r\nimport { comparator, sort } from '../../utils/SortUtils';\r\nimport useUsageByMonth from '../../hooks/bymonth/UseUsageByMonth';\r\nimport useSort from '../../hooks/common/UseSort';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst cellInfos = [\r\n    new CellInfo('id', true, 'left', 'Month', false, toMonth),\r\n    new CellInfo('download', false, 'right', 'Down', true, usageInGBytes),\r\n    new CellInfo('upload', false, 'right', 'Up', true, usageInGBytes),\r\n    new CellInfo('total', true, 'right', 'Total', true, usageInGBytes),\r\n    new CellInfo('percent', false, 'right', 'Percent', false, toPercent),\r\n    new CellInfo('average', false, 'right', 'Average', true, usageInGBytes),\r\n    new CellInfo('days', false, 'left', 'Days', true),\r\n];\r\n\r\nconst UsageByMonth = () => {\r\n    const { years, year, setYear, data, loading } = useUsageByMonth();\r\n    const { ascending, setAscending, orderBy, setOrderBy } = useSort(false, cellInfos[0].id);\r\n\r\n    const handleChangeYear = (event) => setYear(event.target.value);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        setAscending(orderBy === property ? !ascending : false);\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const displayData = () =>\r\n        data ? (\r\n            <Table stickyHeader size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell colSpan={cellInfos.length}>\r\n                            <DropDown id=\"month-year\" onChange={handleChangeYear} items={years} value={year} />\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <Header prefix=\"month\" cellInfos={cellInfos} onRequestSort={handleRequestSort} ascending={ascending} orderBy={orderBy} />\r\n                <Body prefix=\"month\" cellInfos={cellInfos} values={sort(data.usage, comparator(ascending, orderBy))} />\r\n                <Footer prefix=\"month\" cellInfos={cellInfos} values={data.total} />\r\n            </Table>\r\n        ) : null;\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            <TableContainer>{displayData()}</TableContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByMonth;\r\n","import { useState, useEffect } from 'react';\r\nimport { toMonth, usageInGBytes } from '../../utils/ConversionUtils';\r\nimport useUsageByMonth from './UseUsageByMonth';\r\n\r\nconst useUsageByMonthGraph = () => {\r\n    const { years, year, setYear, data, loading } = useUsageByMonth();\r\n    const [options, setOptions] = useState({});\r\n    const [series, setSeries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setOptions({\r\n                chart: {\r\n                    id: 'usage-by-month',\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: data.usage.map((element) => toMonth(element.id)).reverse(),\r\n                },\r\n            });\r\n\r\n            setSeries([\r\n                {\r\n                    name: 'Total Usage',\r\n                    data: data.usage.map((element) => Math.round(usageInGBytes(element.total))).reverse(),\r\n                },\r\n            ]);\r\n        }\r\n    }, [data]);\r\n\r\n    return { options, series, years, year, setYear, loading };\r\n};\r\n\r\nexport default useUsageByMonthGraph;\r\n","import React from 'react';\r\nimport { FormControl, Paper } from '@material-ui/core';\r\nimport Chart from 'react-apexcharts';\r\nimport DropDown from '../../components/inputs/DropDown';\r\nimport useUsageByMonthGraph from '../../hooks/bymonth/UseUsageByMonthGraph';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst UsageByMonthGraph = () => {\r\n    const { options, series, years, year, setYear, loading } = useUsageByMonthGraph();\r\n\r\n    const handleChangeYear = (event) => setYear(event.target.value);\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            <FormControl>\r\n                <DropDown id=\"month-year-graph\" onChange={handleChangeYear} items={years} value={year} />\r\n            </FormControl>\r\n            <Chart options={options} series={series} type=\"bar\" height={500} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByMonthGraph;\r\n","import { useState, useEffect } from 'react';\r\nimport API from '../../services/API';\r\n\r\nconst useUsageByYear = () => {\r\n    const [data, setData] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            const usageByYear = await API.getUsageByYear();\r\n            setData(usageByYear);\r\n            setLoading(false);\r\n        }\r\n        fetch();\r\n    }, []);\r\n\r\n    return { data, loading };\r\n};\r\n\r\nexport default useUsageByYear;\r\n","import React from 'react';\r\nimport { Paper, Table, TableRow, TableHead, TableContainer } from '@material-ui/core';\r\nimport Body from '../../components/table/Body';\r\nimport CellInfo from '../../components/table/CellInfo';\r\nimport Header from '../../components/table/Header';\r\nimport Pagination from '../../components/table/Pagination';\r\nimport { usageInGBytes } from '../../utils/ConversionUtils';\r\nimport { comparator, sort } from '../../utils/SortUtils';\r\nimport useUsageByYear from '../../hooks/byyear/UseUsageByYear';\r\nimport useSort from '../../hooks/common/UseSort';\r\nimport usePagination from '../../hooks/common/UsePagination';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst cellInfos = [\r\n    new CellInfo('id', true, 'left', 'Year', false),\r\n    new CellInfo('download', false, 'right', 'Down', true, usageInGBytes),\r\n    new CellInfo('upload', false, 'right', 'Up', true, usageInGBytes),\r\n    new CellInfo('total', true, 'right', 'Total', true, usageInGBytes),\r\n    new CellInfo('average', false, 'right', 'Average', true, usageInGBytes),\r\n    new CellInfo('days', false, 'left', 'Days', true),\r\n];\r\n\r\nconst rowsPerPageMin = 12;\r\n\r\nconst UsageByYear = () => {\r\n    const { data, loading } = useUsageByYear();\r\n    const { page, setPage, rowsPerPage, setRowsPerPage } = usePagination(rowsPerPageMin);\r\n    const { ascending, setAscending, orderBy, setOrderBy } = useSort(false, cellInfos[0].id);\r\n\r\n    const handleChangePage = (event, newPage) => setPage(newPage);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(Number(event.target.value));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        setAscending(orderBy === property ? !ascending : false);\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const displayData = () =>\r\n        data ? (\r\n            <Table stickyHeader size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <Pagination\r\n                            colSpan={cellInfos.length}\r\n                            count={data.length}\r\n                            minimum={rowsPerPageMin}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n                    </TableRow>\r\n                </TableHead>\r\n                <Header prefix=\"year\" cellInfos={cellInfos} onRequestSort={handleRequestSort} ascending={ascending} orderBy={orderBy} />\r\n                <Body\r\n                    prefix=\"year\"\r\n                    cellInfos={cellInfos}\r\n                    values={sort(data, comparator(ascending, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)}\r\n                />\r\n            </Table>\r\n        ) : null;\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            <TableContainer>{displayData()}</TableContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByYear;\r\n","import { useState, useEffect } from 'react';\r\nimport { usageInGBytes } from '../../utils/ConversionUtils';\r\nimport useUsageByYear from './UseUsageByYear';\r\n\r\nconst useUsageByYearGraph = () => {\r\n    const { data, loading } = useUsageByYear();\r\n    const [options, setOptions] = useState({});\r\n    const [series, setSeries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setOptions({\r\n                chart: {\r\n                    id: 'usage-by-year',\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: data.map((element) => element.id).reverse(),\r\n                },\r\n            });\r\n\r\n            setSeries([\r\n                {\r\n                    name: 'Total Usage',\r\n                    data: data.map((element) => Math.round(usageInGBytes(element.total))).reverse(),\r\n                },\r\n            ]);\r\n        }\r\n    }, [data]);\r\n\r\n    return { options, series, loading };\r\n};\r\n\r\nexport default useUsageByYearGraph;\r\n","import React from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport Chart from 'react-apexcharts';\r\nimport useUsageByYearGraph from '../../hooks/byyear/UseUsageByYearGraph';\r\nimport Loading from '../../components/loading/Loading';\r\n\r\nconst UsageByYearGraph = () => {\r\n    const { options, series, loading } = useUsageByYearGraph();\r\n\r\n    return (\r\n        <Paper>\r\n            <Loading isLoading={loading} />\r\n            <Chart options={options} series={series} type=\"bar\" height={500} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UsageByYearGraph;\r\n","import React from 'react';\r\nimport { Person, CalendarToday, CalendarViewDay, ShowChart, Timeline } from '@material-ui/icons';\r\nimport UsageByUser from '../pages/byuser/UsageByUser';\r\nimport UsageByUserGraph from '../pages/byuser/UsageByUserGraph';\r\nimport UsageByMonth from '../pages/bymonth/UsageByMonth';\r\nimport UsageByMonthGraph from '../pages/bymonth/UsageByMonthGraph';\r\nimport UsageByYear from '../pages/byyear/UsageByYear';\r\nimport UsageByYearGraph from '../pages/byyear/UsageByYearGraph';\r\n\r\nclass MenuItem {\r\n    constructor(id, component, pathname, label, icon) {\r\n        this.id = id;\r\n        this.component = component;\r\n        this.pathname = pathname;\r\n        this.label = label;\r\n        this.icon = icon;\r\n    }\r\n}\r\n\r\nconst menu = [\r\n    new MenuItem('usage-by-user', UsageByUser, '/UsageByUser', 'By User', <Person />),\r\n    new MenuItem('usage-by-user-graph', UsageByUserGraph, '/UsageByUserGraph', 'By User Graph', <ShowChart />),\r\n    new MenuItem('usage-by-month', UsageByMonth, '/UsageByMonth', 'By Month', <CalendarToday />),\r\n    new MenuItem('usage-by-month-graph', UsageByMonthGraph, '/UsageByMonthGraph', 'By Month Graph', <Timeline />),\r\n    new MenuItem('usage-by-year', UsageByYear, '/UsageByYear', 'By Year', <CalendarViewDay />),\r\n    new MenuItem('usage-by-year-graph', UsageByYearGraph, '/UsageByYearGraph', 'By Year Graph', <Timeline />),\r\n];\r\n\r\nexport default menu;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { DateTime } from 'luxon';\r\nimport theme from './theme';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Header from './components/main/Header';\r\nimport Footer from './components/main/Footer';\r\nimport Navigation from './components/navigation/Navigation';\r\nimport Routes from './components/navigation/Routes';\r\nimport ErrorBoundary from './components/error/ErrorBoundary';\r\nimport menu from './menu/Menu';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst basepath = process.env.PUBLIC_URL;\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: basepath,\r\n});\r\n\r\nconst App = ({ currentTime }) => (\r\n    <BrowserRouter basename={basepath}>\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Header />\r\n            <Navigation menu={menu} />\r\n            <ErrorBoundary>\r\n                <Routes menu={menu} />\r\n                <Footer currentTime={currentTime} />\r\n            </ErrorBoundary>\r\n        </ThemeProvider>\r\n    </BrowserRouter>\r\n);\r\n\r\nApp.defaultProps = {\r\n    currentTime: DateTime.local().toLocaleString(DateTime.DATETIME_FULL_WITH_SECONDS),\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootNode = document.getElementById('root');\r\n\r\n/*\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    rootNode\r\n);\r\n*/\r\n\r\nReactDOM.render(<App />, rootNode);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}